c
Movie.all
Movie.pluck[:title]Movie.a
Movie.pluck(title)
Movie.titles
Movie.ids
Movie.director
Movie.title
Movie.all_titles
Movie.all_title
Movie.all
Movie.destroy('title':'Lagaan')
Movie.all
Movie.count
Movie.all
c
Movie.all_ratings
c
allow(Movie).to receive(:similar_to).with(id_1+1).and_return("")
expect(Movie).to receive(:similar_to).with(id_1+1).and_return("")
expect(Movie).to receive(:similar_to).with(id_1+1)
c
expect(Movie).to receive(:similar_to).with(id_1)
x
id_1
c
Movie.where('director': 'director1')
id_1
q
id_1
Movie.where('director': 'director1')
expect( Movie.similar_to(176).pluck(:title) ).to include('movie2')
expect( Movie.similar_to(id_1).pluck(:title) ).to include('movie2')
id_1=180
id_1
Movie.where('director': 'director1')
id_1
Movie.where('director': 'director1')
Movie.all
Movie.similar_to(id_1)
id_1
q
arr.should have(3).items
arr = [1,2,3]
Movie.similar_to(id_1).should have(2).items
Movie.similar_to(id_1).should_have
Movie.similar_to(id_1).should
Movie.similar_to(id_1).should?
Movie.similar_to(id_1)
id_1
c
Movie.where('director': 'director1').pluck('id')
q
Movie.where('director': 'director1').pluck('id')
Movie.where('director': 'director1').pluck('id')[0]
id_1
q
id_1
id_1 = Movie.where('director': 'director1').pluck('id')[0]
Movie.where('director': 'director1').pluck('id')[0]
Movie.where('director': 'director1').pluck('id')
Movie.where('director': 'director1')
q
:id_1
id_1
q
'id_1'
:id_1
id_1
q
id
:id
